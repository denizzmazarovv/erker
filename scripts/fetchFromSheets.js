const fs = require("fs");
const path = require("path");
const axios = require("axios");
const { GoogleSpreadsheet } = require("google-spreadsheet");

const CREDENTIALS = require("./google-credentials.json");
const SHEET_ID = "1of_IcgP7caETFi6Y0Zutwswb2_CKWbfx9P7aDOa-q5M"; // –±–µ–∑ https://docs.google.com...

const PUBLIC_PATH = path.join(__dirname, "..", "public");

async function run() {
  const doc = new GoogleSpreadsheet(SHEET_ID);
  await doc.useServiceAccountAuth(CREDENTIALS);
  await doc.loadInfo();

  const sheet = doc.sheetsByIndex[0];
  const rows = await sheet.getRows();

  const result = [];
  let counter = 1;

  for (const row of rows) {
    const mainUrl = row["–ì–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ"];
    const title = row["–ù–∞–∑–≤–∞–Ω–∏–µ"];
    const year = row["–ì–æ–¥"];
    const area = row["–ü–ª–æ—â–∞–¥—å"];
    const location = row["–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"];
    const category = row["–ö–∞—Ç–µ–≥–æ—Ä–∏—è"];
    const description = row["–û–ø–∏—Å–∞–Ω–∏–µ"];
    const imageUrls = [row["–§–æ—Ç–æ 1"], row["–§–æ—Ç–æ 2"], row["–§–æ—Ç–æ 3"]].filter(
      Boolean
    );

    let mainFile = null;
    const extraFiles = [];

    if (mainUrl) {
      const { fileName } = await downloadImage(mainUrl, counter);
      mainFile = fileName;
      counter++;
    }

    for (const url of imageUrls) {
      const { fileName } = await downloadImage(url, counter);
      extraFiles.push(fileName);
      counter++;
    }

    result.push({
      title,
      year,
      area,
      location,
      category,
      description,
      mainImage: mainFile,
      images: extraFiles,
    });
  }

  fs.writeFileSync(
    path.join(PUBLIC_PATH, "data.json"),
    JSON.stringify(result, null, 2)
  );
  console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ public/");
}

async function downloadImage(url, number) {
  const response = await axios.get(url, { responseType: "arraybuffer" });
  const contentType = response.headers["content-type"];
  let ext = contentType.split("/")[1];
  if (ext === "jpeg") ext = "jpg";

  const fileName = `${number}.${ext}`;
  const filePath = path.join(PUBLIC_PATH, fileName);
  fs.writeFileSync(filePath, response.data);

  console.log(`üì∏ –°–∫–∞—á–∞–Ω–æ: ${fileName}`);
  return { fileName };
}

run().catch(console.error);
